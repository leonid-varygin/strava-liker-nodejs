const puppeteer = require('puppeteer');
const schedule = require('node-schedule');
require('dotenv').config()

// const rule = new schedule.RecurrenceRule();
// rule.dayOfWeek = [0, new schedule.Range(0, 6)];
// rule.hour = 10;
// rule.minute = 30;

// schedule.scheduleJob(rule,
//     //–î–ª—è Linux –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é main ({ executablePath: '/usr/bin/chromium-browser' })
//     () => main()
//         .then(() => console.log('–õ–∞–π–∫–∏ –æ—Ç–≥—Ä—É–∂–µ–Ω—ã üòç'))
//         .catch(e => console.log('–°–ª—É—á–∏–ª–∞—Å—å –ø–æ–ª–æ–º–∫–∞ üòû: ' + e.message)))

async function main(variant) {
    const browser = await puppeteer.launch({
        headless: true,
        ...variant
    });

    const page = await browser.newPage();
    await page.setUserAgent('5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36');
    await page.setViewport({ width: 1920, height: 1080 })

    await page.goto('https://www.strava.com/dashboard/following/180', {waitUntil: 'load', timeout: 10000});

    await page.type('#email', process.env.STRAVA_LOGIN);
    await page.type('#password', process.env.STRAVA_PASSWORD);

    await Promise.all([
        page.click('#login-button'),
        page.waitForNavigation({ waitUntil: 'networkidle0' }),
    ]);
    await page.evaluate(() => {
        document.querySelectorAll('[title="–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—á–µ—Ç"]').forEach(el => {
            el.click()
            console.log('–£—Å–ø–µ—à–Ω—ã–π –ª–∞–π–±–æ–Ω ü§©')
        })
        document.querySelectorAll('[title="–ü–æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—á–µ—Ç –ø–µ—Ä–≤—ã–º!"]').forEach(el => {
            el.click()
            console.log('–£—Å–ø–µ—à–Ω—ã–π –ª–∞–π–±–æ–Ω –¥–ª—è –ø–µ—Ä–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üí™')
        })

    })
    await browser.close()
    console.log('closed')
}
main()